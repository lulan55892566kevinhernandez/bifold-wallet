// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displays a credential accept screen renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flexDirection": "column",
          "flexGrow": 1,
          "paddingHorizontal": 25,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 26,
              "fontWeight": "bold",
            },
            Object {
              "fontWeight": "normal",
              "marginTop": 90,
              "textAlign": "center",
            },
          ]
        }
        testID="com.ariesbifold:id/CredentialOnTheWay"
      >
        CredentialOffer.CredentialOnTheWay
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "flex-end",
            "minHeight": 250,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "column",
            },
          ]
        }
      >
        <
          height={140}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
              },
            ]
          }
          width={140}
        />
        <View
          style={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": -105,
                },
              ],
            }
          }
        >
          <
            height={140}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
            width={140}
          />
        </View>
        <
          height={140}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
              },
            ]
          }
          width={140}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginBottom": 20,
            "marginTop": "auto",
          },
        ]
      }
    />
  </RNCSafeAreaView>
</Modal>
`;

exports[`displays a credential accept screen transitions to offer accepted 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flexDirection": "column",
          "flexGrow": 1,
          "paddingHorizontal": 25,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 26,
              "fontWeight": "bold",
            },
            Object {
              "fontWeight": "normal",
              "marginTop": 90,
              "textAlign": "center",
            },
          ]
        }
        testID="com.ariesbifold:id/CredentialAddedToYourWallet"
      >
        CredentialOffer.CredentialAddedToYourWallet
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "flex-end",
            "minHeight": 250,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "column",
            },
          ]
        }
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "alignItems": "center",
              "opacity": 0,
            }
          }
        >
          < />
        </View>
        <View>
          <
            height={140}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "position": "absolute",
                },
              ]
            }
            width={140}
          />
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": -105,
                  },
                ],
              }
            }
          >
            <
              height={140}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
              width={140}
            />
          </View>
          <
            height={140}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "position": "absolute",
                },
              ]
            }
            width={140}
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginBottom": 20,
            "marginTop": "auto",
          },
        ]
      }
    >
      <View
        accessibilityLabel="Global.Done"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#42803E",
            "borderRadius": 4,
            "opacity": 1,
            "padding": 16,
          }
        }
        testID="com.ariesbifold:id/Done"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              false,
            ]
          }
        >
          Global.Done
        </Text>
      </View>
    </View>
  </RNCSafeAreaView>
</Modal>
`;

exports[`displays a credential accept screen transitions to taking too delay message 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flexDirection": "column",
          "flexGrow": 1,
          "paddingHorizontal": 25,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 26,
              "fontWeight": "bold",
            },
            Object {
              "fontWeight": "normal",
              "marginTop": 90,
              "textAlign": "center",
            },
          ]
        }
        testID="com.ariesbifold:id/CredentialOnTheWay"
      >
        CredentialOffer.CredentialOnTheWay
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "flex-end",
            "minHeight": 250,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "column",
            },
          ]
        }
      >
        <
          height={140}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
              },
            ]
          }
          width={140}
        />
        <View
          style={
            Object {
              "opacity": 0.15767840628626967,
              "transform": Array [
                Object {
                  "translateY": -105,
                },
              ],
            }
          }
        >
          <
            height={140}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
            width={140}
          />
        </View>
        <
          height={140}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "position": "absolute",
              },
            ]
          }
          width={140}
        />
      </View>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontSize": 18,
            "fontWeight": "normal",
          },
          Object {
            "marginTop": 20,
            "textAlign": "center",
          },
        ]
      }
      testID="com.ariesbifold:id/TakingTooLong"
    >
      Connection.TakingTooLong
    </Text>
    <View
      style={
        Array [
          Object {
            "marginBottom": 20,
            "marginTop": "auto",
          },
        ]
      }
    >
      <View
        accessibilityLabel="Loading.BackToHome"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "#42803E",
            "borderRadius": 4,
            "borderWidth": 2,
            "opacity": 1,
            "padding": 16,
          }
        }
        testID="com.ariesbifold:id/BackToHome"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#42803E",
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
              },
              false,
            ]
          }
        >
          Loading.BackToHome
        </Text>
      </View>
    </View>
  </RNCSafeAreaView>
</Modal>
`;
